syntax="proto3";

package subscription_service;
option go_package ="genproto/subscription_service";

import "resource_category.proto";
import "subscription_categories.proto";
import "resource.proto";
import "subscription.proto";
import "user_subscription.proto";
import "common.proto";

service ResourceCategoryService {
    rpc Create(ResourceCategory) returns (ResourceCategory) {};
    rpc Get(Id) returns (ResourceCategory) {};
    rpc Find(GetListFilter) returns (ResourceCategories) {};
    rpc Update(ResourceCategory) returns (ResourceCategory) {};
    rpc Delete(Id) returns (Empty) {};
    rpc AddResource(ResourceAndCategoryIds) returns (Empty) {};
    rpc RemoveResource(ResourceAndCategoryIds) returns (Empty) {};
}

service ResourceService {
    rpc Create(Resource) returns (Resource) {};
    rpc Get(Id) returns (Resource) {};
    rpc Find(GetListFilter) returns (Resources) {};
    rpc Update(Resource) returns (Resource) {};
    rpc Delete(Id) returns (Empty) {};
}

service SubscriptionCategoryService {
    rpc Create(SubscriptionCategory) returns (SubscriptionCategory) {};
    rpc Get(Id) returns (SubscriptionCategory) {};
    rpc Find(GetListFilter) returns (SubscriptionCategories) {};
    rpc Update(SubscriptionCategory) returns (SubscriptionCategory) {};
    rpc Delete(Id) returns (Empty) {};
    rpc AddResourceCategory(SubscriptionResourceCategoryIds) returns (Empty) {}
    rpc RemoveResourceCategory(SubscriptionResourceCategoryIds) returns (Empty) {}
}

service SubscriptionService {
    rpc Create(Subscription) returns (Subscription) {};
    rpc Get(Id) returns (Subscription) {};
    rpc Find(GetListFilter) returns (Subscriptions) {};
    rpc Update(Subscription) returns (Subscription) {};
    rpc Delete(Id) returns (Empty) {};
}

service UserSubscriptionService {
    rpc Buy(BuyRequest) returns (Empty) {};
    rpc CreateTvodAccess(TvodAccess) returns (TvodAccess) {};
    rpc RemoveTvodAccess(Id) returns (Empty) {}; 
    rpc CheckSubscription(CheckSubscriptionRequest) returns (CheckSubscriptionResponse) {};
    rpc GetUserSubscriptions(GetUserSubscriptionsRequest) returns (GetUserSubscriptionsResponse) {};
}